#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// #define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600

#define ZMK_POINTING_DEFAULT_SCRL_VAL 50       // default: 10

// Layer aliases

#define BASE 0
#define FUN 1
#define NUM 2
#define NAV 3
#define MEDIA 4
#define SYM 5
#define MOUSE 6
#define MOUSEXFAST 7
#define MOUSEFAST 8
#define MOUSESLOW 9

// &mmv {
//     time-to-max-speed-ms = <120>;
//     acceleration-exponent = <6>;
// };

&msc {
    time-to-max-speed-ms = <180>;
    acceleration-exponent = <2>;
};

&mmv_input_listener {
    set_mouse_fast {
        layers = <MOUSEXFAST>;
        input-processors = <&zip_xy_scaler 4 1>;
        process-next;
    };
};

&msc_input_listener {
    set_mouse_fast {
        layers = <MOUSEXFAST>;
        input-processors = <&zip_xy_scaler 4 1>;
    };
};

&mmv_input_listener {
    set_mouse_slow {
        layers = <MOUSEFAST>;
        input-processors = <&zip_xy_scaler 2 1>;
    };
};

&mmv_input_listener {
    set_mouse_extra_slow {
        layers = <MOUSESLOW>;
        input-processors = <&zip_xy_scaler 1 2>;
    };
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        dot_or_comma: dot_or_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_OR_COMMA";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COMMA>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&lt 0 Q  &kp W             &lt 2 E                     &lt 1 R                 &lt 4 T               &kp Y               &kp U                   &kp I                           &kp O             &mt RIGHT_ALT P
&lt 5 A  &mt LEFT_SHIFT S  &mt LEFT_GUI D              &mt LEFT_ALT F          &mt LEFT_CONTROL G    &mt LEFT_CONTROL H  &mt LEFT_ALT J          &mt LEFT_GUI K                  &mt LEFT_SHIFT L  &kp TAB
&lt 3 Z  &kp X             &mt LS(LC(LG(LEFT_ALT))) C  &mt LS(LC(LEFT_ALT)) V  &kp B                 &kp N               &mt LS(LC(LEFT_ALT)) M  &mt LS(LC(LG(LEFT_ALT))) COMMA  &kp DOT           &kp ESC
                                                       &kp BACKSPACE           &lt 6 SPACE           &lt 2 RETURN        &kp DELETE
            >;
        };

        FUN {
            bindings = <
&trans  &trans  &trans          &sys_reset  &trans          &trans        &kp F1  &kp F2   &kp F3   &kp F4
&trans  &trans  &trans          &trans      &trans          &caps_word    &kp F5  &kp F6   &kp F7   &kp F8
&trans  &trans  &bt BT_CLR_ALL  &trans      &bootloader     &kp CAPSLOCK  &kp F9  &kp F10  &kp F11  &kp F12
                                &trans      &kp LEFT_ALT    &trans        &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &kp PLUS   &kp N1  &kp N2  &kp N3  &kp ASTERISK
&trans  &trans  &trans  &trans  &trans          &kp N0     &kp N4  &kp N5  &kp N6  &dot_or_comma
&trans  &trans  &trans  &trans  &trans          &kp MINUS  &kp N7  &kp N8  &kp N9  &kp SLASH
                        &trans  &kp LEFT_GUI    &trans     &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans       &none          &none     &kp UP_ARROW    &none            &kp LG(LEFT_ARROW)
&trans  &trans  &trans  &trans  &trans       &kp PAGE_UP    &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(RIGHT)
&trans  &trans  &trans  &trans  &trans       &kp PAGE_DOWN  &kp HOME  &none           &kp END          &none
                        &trans  &kp LCTRL    &trans         &trans
            >;
        };

        MEDIA {
            bindings = <
&none  &none  &none  &none   &none        &kp K_MUTE       &none        &none           &none  &none
&none  &none  &none  &none   &none        &kp C_VOLUME_UP  &kp C_PLAY   &kp C_NEXT      &none  &kp C_BRIGHTNESS_INC
&none  &none  &none  &none   &none        &kp C_VOL_DN     &kp C_PAUSE  &kp C_PREVIOUS  &none  &kp C_BRIGHTNESS_DEC
                     &trans  &kp LCTRL    &none            &none
            >;
        };

        SYM {
            bindings = <
&trans  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT     &kp CARET      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &trans       &trans    &trans      &trans          &kp GRAVE      &kp QUESTION          &kp EXCLAMATION        &kp SQT           &kp MINUS
&trans  &trans       &trans    &trans      &trans          &kp AMPERSAND  &kp SLASH             &kp EQUAL              &kp SEMICOLON     &kp BACKSLASH
                               &trans      &kp LEFT_GUI    &kp LEFT_GUI   &trans
            >;
        };

        MOUSE {
            bindings = <
&none  &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_ALT  &none    &none           &mkp MB4        &mmv MOVE_UP    &mkp MB5         &none
&none  &mo 7           &mo 8         &mo 9         &none    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK
&none  &none           &none         &none         &none    &msc SCRL_DOWN  &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &none
                                     &none         &none    &mkp LCLK       &none
            >;
        };

        MOUSEXFAST {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        MOUSEFAST {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        MOUSESLOW {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
