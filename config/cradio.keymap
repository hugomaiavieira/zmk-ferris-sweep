#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

&mmv {
    time-to-max-speed-ms = <120>;
    acceleration-exponent = <4>;
};

&msc {
    time-to-max-speed-ms = <80>;
    acceleration-exponent = <10>;
};

/ {
    behaviors {
        dot_or_comma: dot_or_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_OR_COMMA";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COMMA>;
        };

        mouse_fast: mouse_fast {
            compatible = "zmk,behavior-input-two-axis";
            label = "MOUSE_FAST";
            #binding-cells = <1>;
            x-input-code = <0>;
            y-input-code = <1>;
            delay-ms = <0>;
            trigger-period-ms = <8>;
            time-to-max-speed-ms = <2>;
            acceleration-exponent = <3>;
        };

        mouse_super_fast: mouse_super_fast {
            compatible = "zmk,input-processor-zip-xy-scaler";
            xy_scale = <9 1>;
        };

        mouse_super_slow: mouse_super_slow {
            compatible = "zmk,input-processor-zip-xy-scaler";
            xy_scale = <1 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&lt 7 Q  &kp W             &lt 2 E                     &lt 1 R                 &lt 5 T               &kp Y               &kp U                   &kp I                           &kp O             &mt RIGHT_ALT P
&lt 6 A  &mt LEFT_SHIFT S  &mt LEFT_GUI D              &mt LEFT_ALT F          &mt LEFT_CONTROL G    &mt LEFT_CONTROL H  &mt LEFT_ALT J          &mt LEFT_GUI K                  &mt LEFT_SHIFT L  &kp TAB
&lt 3 Z  &kp X             &mt LS(LC(LG(LEFT_ALT))) C  &mt LS(LC(LEFT_ALT)) V  &kp B                 &kp N               &mt LS(LC(LEFT_ALT)) M  &mt LS(LC(LG(LEFT_ALT))) COMMA  &kp DOT           &kp ESC
                                                       &lt 4 SPACE             &kp BACKSPACE         &kp DELETE          &lt 2 RETURN
            >;
        };

        Fun {
            bindings = <
&trans  &trans  &trans  &trans        &trans    &trans        &kp F1  &kp F2   &kp F3   &kp F4
&trans  &trans  &trans  &trans        &trans    &caps_word    &kp F5  &kp F6   &kp F7   &kp F8
&trans  &trans  &trans  &trans        &trans    &kp CAPSLOCK  &kp F9  &kp F10  &kp F11  &kp F12
                        &kp LEFT_ALT  &trans    &trans        &trans
            >;
        };

        Num {
            bindings = <
&trans  &trans  &trans  &trans        &trans    &kp PLUS   &kp N1  &kp N2  &kp N3  &kp ASTERISK
&trans  &trans  &trans  &trans        &trans    &kp N0     &kp N4  &kp N5  &kp N6  &dot_or_comma
&trans  &trans  &trans  &trans        &trans    &kp MINUS  &kp N7  &kp N8  &kp N9  &kp SLASH
                        &kp LEFT_GUI  &trans    &trans     &trans
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans  &trans            &trans    &none          &none     &kp UP_ARROW    &none            &kp LG(LEFT_ARROW)
&trans  &trans  &trans  &trans            &trans    &kp PAGE_UP    &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(RIGHT)
&trans  &trans  &trans  &trans            &trans    &kp PAGE_DOWN  &kp HOME  &none           &kp END          &none
                        &kp LEFT_CONTROL  &trans    &trans         &trans
            >;
        };

        Mouse {
            bindings = <
&none  &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_ALT  &none    &none           &none           &mmv MOVE_UP    &none            &none
&none  &none           &none         &none         &none    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK
&none  &none           &none         &none         &none    &msc SCRL_DOWN  &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &none
                                     &none         &none    &none           &mkp LCLK
            >;
        };

        Media {
            bindings = <
&none  &none  &none  &none             &none    &kp K_MUTE       &none        &none           &none  &none
&none  &none  &none  &none             &none    &kp C_VOLUME_UP  &kp C_PLAY   &kp C_NEXT      &none  &kp C_BRIGHTNESS_INC
&none  &none  &none  &none             &none    &kp C_VOL_DN     &kp C_PAUSE  &kp C_PREVIOUS  &none  &kp C_BRIGHTNESS_DEC
                     &kp LEFT_CONTROL  &none    &none            &none
            >;
        };

        SymA {
            bindings = <
&trans  &trans  &trans  &trans        &trans    &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &trans  &trans  &trans        &trans    &kp GRAVE  &kp QUESTION          &kp EXCLAMATION        &kp SQT           &kp MINUS
&trans  &trans  &trans  &trans        &trans    &trans     &kp SLASH             &kp EQUAL              &kp SEMICOLON     &kp BACKSLASH
                        &kp LEFT_GUI  &trans    &trans     &kp LEFT_GUI
            >;
        };

        SymB {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans         &trans       &trans    &trans       &trans
&trans  &trans  &trans  &trans  &trans    &kp AMPERSAND  &kp AT_SIGN  &kp HASH  &kp PERCENT  &kp DOLLAR
&trans  &trans  &trans  &trans  &trans    &trans         &trans       &trans    &trans       &trans
                        &trans  &trans    &trans         &trans
            >;
        };

        MouseFast {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &msc SCRL_UP    &trans          &mmv MOVE_UP    &trans           &trans
&trans  &trans  &trans  &trans  &trans    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK
&trans  &trans  &trans  &trans  &trans    &trans          &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &trans
                        &trans  &trans    &trans          &mkp LCLK
            >;
        };
    };
};
